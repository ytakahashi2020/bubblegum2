/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { GetDataEnumKind, GetDataEnumKindContent, Serializer } from '@metaplex-foundation/umi/serializers';
import { ApplicationDataEvent, ApplicationDataEventArgs, ChangeLogEvent, ChangeLogEventArgs } from '.';
export declare type AccountCompressionEvent = {
    __kind: 'ChangeLog';
    fields: [ChangeLogEvent];
} | {
    __kind: 'ApplicationData';
    fields: [ApplicationDataEvent];
};
export declare type AccountCompressionEventArgs = {
    __kind: 'ChangeLog';
    fields: [ChangeLogEventArgs];
} | {
    __kind: 'ApplicationData';
    fields: [ApplicationDataEventArgs];
};
export declare function getAccountCompressionEventSerializer(): Serializer<AccountCompressionEventArgs, AccountCompressionEvent>;
export declare function accountCompressionEvent(kind: 'ChangeLog', data: GetDataEnumKindContent<AccountCompressionEventArgs, 'ChangeLog'>['fields']): GetDataEnumKind<AccountCompressionEventArgs, 'ChangeLog'>;
export declare function accountCompressionEvent(kind: 'ApplicationData', data: GetDataEnumKindContent<AccountCompressionEventArgs, 'ApplicationData'>['fields']): GetDataEnumKind<AccountCompressionEventArgs, 'ApplicationData'>;
export declare function isAccountCompressionEvent<K extends AccountCompressionEvent['__kind']>(kind: K, value: AccountCompressionEvent): value is AccountCompressionEvent & {
    __kind: K;
};
