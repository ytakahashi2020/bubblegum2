"use strict";
/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getCompressionAccountTypeSerializer = exports.CompressionAccountType = void 0;
const serializers_1 = require("@metaplex-foundation/umi/serializers");
var CompressionAccountType;
(function (CompressionAccountType) {
    CompressionAccountType[CompressionAccountType["Uninitialized"] = 0] = "Uninitialized";
    CompressionAccountType[CompressionAccountType["ConcurrentMerkleTree"] = 1] = "ConcurrentMerkleTree";
})(CompressionAccountType = exports.CompressionAccountType || (exports.CompressionAccountType = {}));
function getCompressionAccountTypeSerializer() {
    return (0, serializers_1.scalarEnum)(CompressionAccountType, {
        description: 'CompressionAccountType',
    });
}
exports.getCompressionAccountTypeSerializer = getCompressionAccountTypeSerializer;
//# sourceMappingURL=compressionAccountType.js.map