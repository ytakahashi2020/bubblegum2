import { Path, PathArgs } from "./path";
import { ChangeLog, ChangeLogArgs } from "./changeLog";
export declare type ConcurrentMerkleTree = {
    sequenceNumber: bigint;
    activeIndex: bigint;
    bufferSize: bigint;
    changeLogs: ChangeLog[];
    rightMostPath: Path;
};
export declare type ConcurrentMerkleTreeArgs = {
    sequenceNumber: bigint | number;
    activeIndex: bigint | number;
    bufferSize: bigint | number;
    changeLogs: ChangeLogArgs[];
    rightMostPath: PathArgs;
};
export declare const getConcurrentMerkleTreeSerializer: (maxDepth: number, maxBufferSize: number) => import("@metaplex-foundation/umi/serializers").Serializer<{
    sequenceNumber: any;
} & {
    activeIndex: any;
} & {
    bufferSize: any;
} & {
    changeLogs: any;
} & {
    rightMostPath: any;
} & {
    sequenceNumber: any;
} & {
    sequenceNumber: any;
} & {
    activeIndex: any;
} & {
    activeIndex: any;
} & {
    bufferSize: any;
} & {
    bufferSize: any;
} & {
    changeLogs: any;
} & {
    changeLogs: any;
} & {
    rightMostPath: any;
} & {
    rightMostPath: any;
}, {
    sequenceNumber: any;
} & {
    activeIndex: any;
} & {
    bufferSize: any;
} & {
    changeLogs: any;
} & {
    rightMostPath: any;
} & {
    sequenceNumber: any;
} & {
    sequenceNumber: any;
} & {
    activeIndex: any;
} & {
    activeIndex: any;
} & {
    bufferSize: any;
} & {
    bufferSize: any;
} & {
    changeLogs: any;
} & {
    changeLogs: any;
} & {
    rightMostPath: any;
} & {
    rightMostPath: any;
}>;
export declare const getCurrentRoot: (tree: Pick<ConcurrentMerkleTreeArgs, 'changeLogs' | 'activeIndex'>) => Uint8Array;
