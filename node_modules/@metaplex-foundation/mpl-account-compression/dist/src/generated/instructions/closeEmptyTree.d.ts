/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Pda, PublicKey, Signer, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
export declare type CloseEmptyTreeInstructionAccounts = {
    merkleTree: PublicKey | Pda;
    /** Authority that controls write-access to the tree */
    authority?: Signer;
    recipient: PublicKey | Pda;
};
export declare type CloseEmptyTreeInstructionData = {
    discriminator: Array<number>;
};
export declare type CloseEmptyTreeInstructionDataArgs = {};
export declare function getCloseEmptyTreeInstructionDataSerializer(): Serializer<CloseEmptyTreeInstructionDataArgs, CloseEmptyTreeInstructionData>;
export declare function closeEmptyTree(context: Pick<Context, 'identity' | 'programs'>, input: CloseEmptyTreeInstructionAccounts): TransactionBuilder;
