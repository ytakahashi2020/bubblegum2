"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isValidLeafSchemaV2Flags = exports.LeafSchemaV2Flags = void 0;
var LeafSchemaV2Flags;
(function (LeafSchemaV2Flags) {
    LeafSchemaV2Flags[LeafSchemaV2Flags["None"] = 0] = "None";
    LeafSchemaV2Flags[LeafSchemaV2Flags["FrozenByOwner"] = 1] = "FrozenByOwner";
    LeafSchemaV2Flags[LeafSchemaV2Flags["FrozenByPermDelegate"] = 2] = "FrozenByPermDelegate";
    LeafSchemaV2Flags[LeafSchemaV2Flags["NonTransferable"] = 4] = "NonTransferable";
})(LeafSchemaV2Flags = exports.LeafSchemaV2Flags || (exports.LeafSchemaV2Flags = {}));
// Checks whether a number is a valid LeafSchemaV2Flags bitmask.
function isValidLeafSchemaV2Flags(n) {
    return (typeof n === 'number' &&
        Number.isInteger(n) &&
        n >= 0 &&
        n <= 0xff && // fits in u8
        (n & ~0b111) === 0 // only known bits (bits 0â€“2)
    );
}
exports.isValidLeafSchemaV2Flags = isValidLeafSchemaV2Flags;
//# sourceMappingURL=flags.js.map