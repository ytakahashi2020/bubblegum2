/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Option, OptionOrNullable, Pda, PublicKey, Signer, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
import { PickPartial } from '../shared';
import { MetadataArgsV2, MetadataArgsV2Args } from '../types';
export declare type VerifyCreatorV2InstructionAccounts = {
    treeConfig?: PublicKey | Pda;
    payer?: Signer;
    /** Optional creator, defaults to `payer` */
    creator?: Signer;
    leafOwner: PublicKey | Pda;
    /** Defaults to `leaf_owner` */
    leafDelegate?: PublicKey | Pda;
    merkleTree: PublicKey | Pda;
    logWrapper?: PublicKey | Pda;
    compressionProgram?: PublicKey | Pda;
    systemProgram?: PublicKey | Pda;
};
export declare type VerifyCreatorV2InstructionData = {
    discriminator: Array<number>;
    root: Uint8Array;
    assetDataHash: Option<Uint8Array>;
    flags: Option<number>;
    nonce: bigint;
    index: number;
    metadata: MetadataArgsV2;
};
export declare type VerifyCreatorV2InstructionDataArgs = {
    root: Uint8Array;
    assetDataHash: OptionOrNullable<Uint8Array>;
    flags: OptionOrNullable<number>;
    nonce: number | bigint;
    index: number;
    metadata: MetadataArgsV2Args;
};
export declare function getVerifyCreatorV2InstructionDataSerializer(): Serializer<VerifyCreatorV2InstructionDataArgs, VerifyCreatorV2InstructionData>;
export declare type VerifyCreatorV2InstructionExtraArgs = {
    proof: Array<PublicKey>;
};
export declare type VerifyCreatorV2InstructionArgs = PickPartial<VerifyCreatorV2InstructionDataArgs & VerifyCreatorV2InstructionExtraArgs, 'assetDataHash' | 'flags' | 'proof'>;
export declare function verifyCreatorV2(context: Pick<Context, 'eddsa' | 'payer' | 'programs'>, input: VerifyCreatorV2InstructionAccounts & VerifyCreatorV2InstructionArgs): TransactionBuilder;
