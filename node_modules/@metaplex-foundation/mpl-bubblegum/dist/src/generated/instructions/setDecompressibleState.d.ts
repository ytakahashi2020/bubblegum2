/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Pda, PublicKey, Signer, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
import { DecompressibleState, DecompressibleStateArgs } from '../types';
export declare type SetDecompressibleStateInstructionAccounts = {
    treeConfig: PublicKey | Pda;
    treeCreator?: Signer;
};
export declare type SetDecompressibleStateInstructionData = {
    discriminator: Array<number>;
    decompressableState: DecompressibleState;
};
export declare type SetDecompressibleStateInstructionDataArgs = {
    decompressableState: DecompressibleStateArgs;
};
export declare function getSetDecompressibleStateInstructionDataSerializer(): Serializer<SetDecompressibleStateInstructionDataArgs, SetDecompressibleStateInstructionData>;
export declare type SetDecompressibleStateInstructionArgs = SetDecompressibleStateInstructionDataArgs;
export declare function setDecompressibleState(context: Pick<Context, 'identity' | 'programs'>, input: SetDecompressibleStateInstructionAccounts & SetDecompressibleStateInstructionArgs): TransactionBuilder;
