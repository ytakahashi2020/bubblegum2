/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Pda, PublicKey, Signer, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
export declare type CancelRedeemInstructionAccounts = {
    treeConfig?: PublicKey | Pda;
    leafOwner: Signer;
    merkleTree: PublicKey | Pda;
    voucher: PublicKey | Pda;
    logWrapper?: PublicKey | Pda;
    compressionProgram?: PublicKey | Pda;
    systemProgram?: PublicKey | Pda;
};
export declare type CancelRedeemInstructionData = {
    discriminator: Array<number>;
    root: Uint8Array;
};
export declare type CancelRedeemInstructionDataArgs = {
    root: Uint8Array;
};
export declare function getCancelRedeemInstructionDataSerializer(): Serializer<CancelRedeemInstructionDataArgs, CancelRedeemInstructionData>;
export declare type CancelRedeemInstructionArgs = CancelRedeemInstructionDataArgs;
export declare function cancelRedeem(context: Pick<Context, 'eddsa' | 'programs'>, input: CancelRedeemInstructionAccounts & CancelRedeemInstructionArgs): TransactionBuilder;
